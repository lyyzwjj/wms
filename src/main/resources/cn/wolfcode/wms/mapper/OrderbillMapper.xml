<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.wms.mapper.OrderbillMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.Orderbill" >
    <id column="id" property="id" />
    <result column="sn" property="sn" />
    <result column="vdate" property="vdate" />
    <result column="status" property="status" />
    <result column="total_amount" property="totalAmount" />
    <result column="total_number" property="totalNumber" />
    <result column="audit_time" property="auditTime" />
    <result column="input_time" property="inputTime" />
    <association property="inputUser" javaType="Employee" columnPrefix="input_user_">
	<result property="id" column="id" />
    <result property="name" column="name" />
    </association>
    <association property="auditor" javaType="Employee" columnPrefix="auditor_">
	<result property="id" column="id" />
    <result property="name" column="name" />
    </association>
    <association property="supplier" javaType="Supplier" columnPrefix="supplier_">
	<result property="id" column="id" />
    <result property="name" column="name" />
    </association>
    <collection property="items" column="id" ofType="Orderbillitem" select="cn.wolfcode.wms.mapper.OrderbillitemMapper.selectByOrderBillId">
    </collection>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `orderbill`
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="cn.wolfcode.wms.domain.Orderbill" useGeneratedKeys="true" keyProperty="id" >
    insert into `orderbill` (sn, vdate, status, total_amount, total_number, audit_time, 
      input_time, input_user_id, auditor_id, supplier_id)
    values (#{sn}, #{vdate}, #{status}, #{totalAmount}, #{totalNumber}, #{auditTime}, 
      #{inputTime}, #{inputUser.id}, #{auditor.id}, #{supplier.id})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.wms.domain.Orderbill" >
    update `orderbill`
    set sn = #{sn},
      vdate = #{vdate},
      status = #{status},
      total_amount = #{totalAmount},
      total_number = #{totalNumber},
      audit_time = #{auditTime},
      input_time = #{inputTime},
      input_user_id = #{inputUser.id},
      auditor_id = #{auditor.id},
      supplier_id = #{supplier.id}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select o.id, o.sn, o.vdate, o.status, o.total_amount, o.total_number, o.audit_time, o.input_time,o.input_user_id,supplier_id,auditor_id,
	auditor.id auditor_id,
	auditor.name auditor_name,
	input_user.name input_user_name,
	supplier.name supplier_name
	from orderbill o
	LEFT JOIN supplier supplier ON o.supplier_id = supplier.id
	LEFT JOIN employee input_user ON o.input_user_id = input_user.id
	LEFT JOIN employee auditor ON o.auditor_id = auditor.id
    where o.id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select o.id, o.sn, o.vdate, o.status, o.total_amount, o.total_number, o.audit_time, o.input_time,o.input_user_id,supplier_id,auditor_id,
	auditor.id auditor_id,
	auditor.name auditor_name,
	input_user.name input_user_name,
	supplier.name supplier_name
	from orderbill o
	LEFT JOIN supplier supplier ON o.supplier_id = supplier.id
	LEFT JOIN employee input_user ON o.input_user_id = input_user.id
	LEFT JOIN employee auditor ON o.auditor_id = auditor.id
  </select>
  <select id="queryForCount" resultType="int">
  select count(o.id)
	from orderbill o
	LEFT JOIN supplier supplier ON o.supplier_id = supplier.id
	LEFT JOIN employee input_user ON o.input_user_id = input_user.id
	LEFT JOIN employee auditor ON o.auditor_id = auditor.id
	<include refid="sql_conditions"/>
  </select>
  <sql id="sql_conditions">
 	<where>
 		<if test="beginDate != null">
 			AND vdate >= #{beginDate}
 		</if>
 		<if test="endDate != null">
 			AND vdate &lt;= #{endDate}
 		</if>
 		<if test="supplierId > 0">
 			AND supplier_id = #{supplierId}
 		</if>
 		<if test="status > -1">
 			AND status = #{status}
 		</if>
 	</where>
  </sql>
  <select id="queryForList" resultMap="BaseResultMap">
  select o.id, o.sn, o.vdate, o.status, o.total_amount, o.total_number, o.audit_time, o.input_time,o.input_user_id,supplier_id,auditor_id,
	auditor.id auditor_id,
	auditor.name auditor_name,
	input_user.name input_user_name,
	supplier.name supplier_name
	from orderbill o
	LEFT JOIN supplier supplier ON o.supplier_id = supplier.id
	LEFT JOIN employee input_user ON o.input_user_id = input_user.id
	LEFT JOIN employee auditor ON o.auditor_id = auditor.id
	<include refid="sql_conditions"/>
	limit #{startIndex},#{pageSize}
  </select>
</mapper>